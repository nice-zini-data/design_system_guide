<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zinidata.eatout.mapper.AgileStatisticsMapper">

    <!--  외식데이터 정보 호출  -->
    <select id="getOuteatList" resultType="com.zinidata.eatout.vo.output.AgileEatoutOutVO">
        with tmp_date as(
            select
                *
            from(
                select
                    to_char(yyyymm,'YYYYMM') as yyyymm
                    , substring(yyyymm::varchar,1,4) as year
                    , to_char(yyyymm,'MM')::numeric as month
                    , date_part('QUARTER',yyyymm::timestamp) as quarter
                    , concat(substring(yyyymm::varchar,1,4),date_part('QUARTER',yyyymm::timestamp)) as check_quarter
                    <![CDATA[
                        , case when date_part('QUARTER',yyyymm::timestamp) <= 2 then 1 else 2 end half
                        , case when date_part('QUARTER',yyyymm::timestamp) <= 2 then concat(substring(yyyymm::varchar,1,4),1) else concat(substring(yyyymm::varchar,1,4),2) end check_half
                    ]]>
                from
                    generate_series(to_date(((select min(yyyymm) from tbss_sum_sales_mega_his)),'YYYYMM'), to_date((select max(yyyymm) from tbss_sum_sales_mega_his),'YYYYMM'),'1 week') yyyymm
            ) tmp
            <if test='dateStart != null and dateEnd != null'>
                where
                <if test='dateType == "1"'>
                    year between #{dateStart} and #{dateEnd}
                </if>
                <if test='dateType == "2"'>
                    check_half between #{dateStart} and #{dateEnd}
                </if>
                <if test='dateType == "3"'>
                    check_quarter between #{dateStart} and #{dateEnd}
                </if>
                <if test='dateType == "4"'>
                    yyyymm between to_char(to_date(#{dateStart},'YYYYMM'),'YYYYMM') and to_char(to_date(#{dateEnd},'YYYYMM'),'YYYYMM')
                </if>
                <if test='dateType == "5"'>
                    check_quarter between #{dateStart} and #{dateEnd}
                </if>
            </if>
        )
        select
        <if test='dateType == "1"'>
            concat(year,'년') as yyyymm
        </if>
        <if test='dateType == "2"'>
            concat(year,'년',b.half,'분기') as yyyymm
        </if>
        <if test='dateType == "3"'>
            concat(year,'.',b.quarter,'Q') as yyyymm
        </if>
        <if test='dateType == "4"'>
            b.yyyymm
        </if>
            , ROUND((sum(sale_amt)/10000),0) as sale_amt, sum(store_cnt) as store_cnt, sum(use_cnt) as use_cnt, sum(cust_cnt) as cust_cnt
            , ROUND(sum(sale_amt) / sum(store_cnt),0) as store_amt, ROUND(sum(sale_amt) / sum(use_cnt),0) as use_amt
            ,sum(cnt_m_10under + cnt_w_10under + cnt_m_1014 + cnt_w_1014 + cnt_m_1519 + cnt_w_1519 + cnt_m_2024 + cnt_w_2024 + cnt_m_2529 + cnt_w_2529) as cnt_20under
            ,sum(cnt_m_3034 + cnt_w_3034 + cnt_m_3539 + cnt_w_3539) as cnt_30
            ,sum(cnt_m_4044 + cnt_w_4044 + cnt_m_4549 + cnt_w_4549) as cnt_40
            ,sum(cnt_m_5054 + cnt_w_5054 + cnt_m_5559 + cnt_w_5559) as cnt_50
            ,sum(cnt_m_60over + cnt_w_60over) as cnt_60over
            ,sum(cnt_time_0609) as time_0609, sum(cnt_time_0912) as time_0912, sum(cnt_time_1215) as time_1215, sum(cnt_time_1518) as time_1518
            ,sum(cnt_time_1821) as time_1821, sum(cnt_time_2124) as time_2124, sum(cnt_time_2406) as time_2406
            ,sum(cnt_mon) as mon , sum(cnt_tue) as tue, sum(cnt_wed) as wed, sum(cnt_thu) as thu, sum(cnt_fri) as fri, sum(cnt_sat) as sat, sum(cnt_sun) as sun
        from
        <if test='admGb == "1"'>
            tbss_sum_sales_mega_his a, tmp_date b, tb_upjong3 c
        </if>
        <if test='admGb == "2"'>
            tbss_sum_sales_cty_his a, tmp_date b, tb_upjong3 c
        </if>
        <if test='admGb == "3"'>
            tbss_sum_sales_admi_his a, tmp_date b, tb_upjong3 c
        </if>
        where 1=1
            and a.yyyymm = b.yyyymm
            and a.upjong3_cd = c.upjong3_cd
        <if test='admGb == "1"'>
            <if test='areaCd != null'>
                and mega_cd like #{areaCd}||'%'
            </if>
        </if>
        <if test='admGb == "2"'>
            and cty_cd like #{areaCd}||'%'
        </if>
        <if test='admGb == "3"'>
            and admi_cd like #{areaCd}||'%'
        </if>
        <if test='upjongType == "1"'>
            and a.upjong3_cd like 'Q%'
        </if>
        <if test='upjongType == "2"'>
            and a.upjong3_cd like #{upjongCd}||'%'
        </if>
        <if test='upjongType == "3"'>
            and a.upjong3_cd like #{upjongCd}||'%'
        </if>
            and c.svc_yn = 'Y'
        group by
            1
        order by
            1
    </select>

    <!--  배달데이터 정보 호출  -->
    <select id="getDeliveryList" resultType="com.zinidata.eatout.vo.output.AgileDeliveryOutVO">
        with tmp_date as(
            select
                *
            from(
                select
                    to_char(yyyymm,'YYYYMM') as yyyymm
                    , substring(yyyymm::varchar,1,4) as year
                    , to_char(yyyymm,'MM')::numeric as month
                    , date_part('QUARTER',yyyymm::timestamp) as quarter
                    , concat(substring(yyyymm::varchar,1,4),date_part('QUARTER',yyyymm::timestamp)) as check_quarter
                    <![CDATA[
                        , case when date_part('QUARTER',yyyymm::timestamp) <= 2 then 1 else 2 end half
                        , case when date_part('QUARTER',yyyymm::timestamp) <= 2 then concat(substring(yyyymm::varchar,1,4),1) else concat(substring(yyyymm::varchar,1,4),2) end check_half
                    ]]>
                from
                    generate_series(to_date(((select min(yyyymm) from tbss_sum_sales_mega_his)),'YYYYMM'), to_date((select max(yyyymm) from tbss_sum_sales_mega_his),'YYYYMM'),'1 week') yyyymm
            ) tmp
            <if test='dateStart != null and dateEnd != null'>
                where
                <if test='dateType == "1"'>
                    year between #{dateStart} and #{dateEnd}
                </if>
                <if test='dateType == "2"'>
                    check_half between #{dateStart} and #{dateEnd}
                </if>
                <if test='dateType == "3"'>
                    check_quarter between #{dateStart} and #{dateEnd}
                </if>
                <if test='dateType == "4"'>
                    yyyymm between to_char(to_date(#{dateStart},'YYYYMM'),'YYYYMM') and to_char(to_date(#{dateEnd},'YYYYMM'),'YYYYMM')
                </if>
                <if test='dateType == "5"'>
                    check_quarter between #{dateStart} and #{dateEnd}
                </if>
            </if>
        )
        select
        <if test='dateType == "1"'>
            concat(year,'년') as yyyymm
        </if>
        <if test='dateType == "2"'>
            concat(year,'년',b.half,'분기') as yyyymm
        </if>
        <if test='dateType == "3"'>
            concat(year,'.',b.quarter,'Q') as yyyymm
        </if>
        <if test='dateType == "4"'>
            b.yyyymm
        </if>
            , ROUND((sum(sale_amt)/100000000),0) as sale_amt, sum(store_cnt) as store_cnt, sum(use_cnt) as use_cnt--, sum(cust_cnt) as cust_cnt
            , ROUND(sum(sale_amt) / sum(store_cnt),0) as store_amt, ROUND(sum(sale_amt) / sum(use_cnt),0) as use_amt
            ,sum(cnt_m_20under + cnt_w_20under + cnt_m_2024 + cnt_w_2024 + cnt_m_2529 + cnt_w_2529) as cnt_20under
            ,sum(cnt_m_3034 + cnt_w_3034 + cnt_m_3539 + cnt_w_3539) as cnt_30
            ,sum(cnt_m_4044 + cnt_w_4044 + cnt_m_4549 + cnt_w_4549) as cnt_40
            ,sum(cnt_m_5054 + cnt_w_5054 + cnt_m_5559 + cnt_w_5559) as cnt_50
            ,sum(cnt_m_60over + cnt_w_60over) as cnt_60over
            ,sum(cnt_time_0609) as time_0609, sum(cnt_time_0912) as time_0912, sum(cnt_time_1215) as time_1215, sum(cnt_time_1518) as time_1518
            ,sum(cnt_time_1821) as time_1821, sum(cnt_time_2124) as time_2124, sum(cnt_time_2406) as time_2406
            ,sum(cnt_mon) as mon , sum(cnt_tue) as tue, sum(cnt_wed) as wed, sum(cnt_thu) as thu, sum(cnt_fri) as fri, sum(cnt_sat) as sat, sum(cnt_sun) as sun
        from
        <if test='admGb == "1"'>
            tbkb_sum_sales_mega_his a, tmp_date b, tb_upjong3 c
        </if>
        <if test='admGb == "2"'>
            tbkb_sum_sales_cty_his a, tmp_date b, tb_upjong3 c
        </if>
        where 1=1
            and a.yyyymm = b.yyyymm
            and a.upjong3_cd = c.upjong3_cd
        <if test='admGb == "1"'>
            and mega_cd like #{areaCd}||'%'
        </if>
        <if test='admGb == "2"'>
            and cty_cd like #{areaCd}||'%'
        </if>
        <if test='upjongType == "1"'>
            and a.upjong3_cd like 'Q%'
        </if>
        <if test='upjongType == "2"'>
            and a.upjong3_cd like #{upjongCd}||'%'
        </if>
        <if test='upjongType == "3"'>
            and a.upjong3_cd like #{upjongCd}||'%'
        </if>
            and svc_yn = 'Y'
        group by
            1
        order by
            1
    </select>

    <!--  Pos데이터 정보 호출  -->
    <select id="getPosList" resultType="com.zinidata.eatout.vo.output.AgilePosOutVO">
        with tmp_date as(
            select
                *
            from(
                select
                    substring(a.sale_mm,1,4) as year
                    <![CDATA[
                    ,concat(substring(a.sale_mm,1,4),case when date_part('QUARTER',to_date(sale_mm,'YYYYMM')::timestamp) <= 2 then 1 else 2 end) as half
                    ]]>
                    ,concat(substring(a.sale_mm,1,4),date_part('QUARTER',to_date(sale_mm,'YYYYMM')::timestamp)) as quarter
                    ,sale_mm as yyyymm
                    ,sale_mm || week as week
                from
                    tbagile_pos_info a
                group by
                    1,2,3,4,5
            ) tmp
        <if test='dateStart != null and dateEnd != null'>
            where
            <if test='dateType == "1"'>
                year between #{dateStart} and #{dateEnd}
            </if>
            <if test='dateType == "2"'>
                half between #{dateStart} and #{dateEnd}
            </if>
            <if test='dateType == "3"'>
                quarter between #{dateStart} and #{dateEnd}
            </if>
            <if test='dateType == "4"'>
                yyyymm between to_char(to_date(#{dateStart},'YYYYMM'),'YYYYMM') and to_char(to_date(#{dateEnd},'YYYYMM'),'YYYYMM')
            </if>
            <if test='dateType == "5"'>
                week between #{dateStart} and #{dateEnd}
            </if>
        </if>
        )
        select
        <if test='dateType == "1"'>
            concat(year,'년') as yyyymm
        </if>
        <if test='dateType == "2"'>
            concat(year,'년',b.half,'분기') as yyyymm
        </if>
        <if test='dateType == "3"'>
            concat(year,'.',b.quarter,'Q') as yyyymm
        </if>
        <if test='dateType == "4"'>
            b.yyyymm
        </if>
        <if test='dateType == "5"'>
            concat(substring(b.week,1,4),'년',substring(b.week,5,2),'월',substring(b.week,7,1),'주차') as yyyymm
        </if>
            ,sum(store_cnt) as store_cnt, sum(sale_qty) sale_qty, sum(tot_sale_amt) tot_sale_amt
            ,ROUND(sum(tot_sale_amt) / sum(sale_qty),0) as sale_amt
        from
            tbagile_pos_info a,tmp_date b, tb_upjong3 c
        where 1=1
            and a.sale_mm = b.yyyymm
            and a.upjong3_cd = c.upjong3_cd
        <if test='admGb == "1"'>
            and mega_cd like #{areaCd}||'%'
        </if>
        <if test='admGb == "2"'>
            and cty_cd like #{areaCd}||'%'
        </if>
        <if test='upjongType == "1"'>
            and a.upjong3_cd like 'Q%'
        </if>
        <if test='upjongType == "2"'>
            and a.upjong3_cd like #{upjongCd}||'%'
        </if>
        <if test='upjongType == "3"'>
            and a.upjong3_cd like #{upjongCd}||'%'
        </if>
        <if test='dateType == "5"'>
            and concat(a.sale_mm,a.week) = b.week
        </if>
            and svc_yn = 'Y'
        group by
            1
        order by
            1
    </select>

    <!--  생활인구데이터 정보 호출  -->
    <select id="getLiviList" resultType="com.zinidata.eatout.vo.output.AgileLiviOutVO">
        with tmp_date as(
            select
            *
            from(
            select
            to_char(yyyymm,'YYYYMM') as yyyymm
            , substring(yyyymm::varchar,1,4) as year
            , to_char(yyyymm,'MM')::numeric as month
            , date_part('QUARTER',yyyymm::timestamp) as quarter
            , concat(substring(yyyymm::varchar,1,4),date_part('QUARTER',yyyymm::timestamp)) as check_quarter
            <![CDATA[
                            , case when date_part('QUARTER',yyyymm::timestamp) <= 2 then 1 else 2 end half
                            , case when date_part('QUARTER',yyyymm::timestamp) <= 2 then concat(substring(yyyymm::varchar,1,4),1) else concat(substring(yyyymm::varchar,1,4),2) end check_half
                        ]]>
            from
            generate_series(to_date(((select min(yyyymm) from tbss_sum_sales_mega_his)),'YYYYMM'), to_date((select max(yyyymm) from tbss_sum_sales_mega_his),'YYYYMM'),'1 week') yyyymm
            ) tmp
            <if test='dateStart != null and dateEnd != null'>
                where
                <if test='dateType == "1"'>
                    year between #{dateStart} and #{dateEnd}
                </if>
                <if test='dateType == "2"'>
                    check_half between #{dateStart} and #{dateEnd}
                </if>
                <if test='dateType == "3"'>
                    check_quarter between #{dateStart} and #{dateEnd}
                </if>
                <if test='dateType == "4"'>
                    yyyymm between to_char(to_date(#{dateStart},'YYYYMM'),'YYYYMM') and to_char(to_date(#{dateEnd},'YYYYMM'),'YYYYMM')
                </if>
                <if test='dateType == "5"'>
                    check_quarter between #{dateStart} and #{dateEnd}
                </if>
            </if>
        )
        select
        <if test='dateType == "1"'>
            concat(year,'년') as yyyymm
        </if>
        <if test='dateType == "2"'>
            concat(year,'년',b.half,'분기') as yyyymm
        </if>
        <if test='dateType == "3"'>
            concat(year,'.',b.quarter,'Q') as yyyymm
        </if>
        <if test='dateType == "4"'>
            b.yyyymm
        </if>
        , sum(pop) as pop
        , sum(pop_m_20s_under) as m_20_under, sum(pop_m_30s) as m_30,sum(pop_m_40s) as m_40,sum(pop_m_50s) as m_50, sum(pop_m_60s_over) as m_60_over
        , sum(pop_w_20s_under) as w_20_under, sum(pop_w_30s) as w_30,sum(pop_w_40s) as w_40,sum(pop_w_50s) as w_50, sum(pop_w_60s_over) as w_60_over
        , sum(pop_time_0006) as time_0006, sum(pop_time_0609) as time_0609, sum(pop_time_0912) as time_0912,sum(pop_time_1215) as time_1215
        , sum(pop_time_1518) as time_1518, sum(pop_time_1821) as time_1821, sum(pop_time_2124) as time_2124
        , sum(pop_mon) as pop_mon, sum(pop_tue) as pop_tue, sum(pop_wed) as pop_wed, sum(pop_thu) as pop_thu, sum(pop_fri) as pop_fri, sum(pop_sat) as pop_sat, sum(pop_sun) as pop_sun
        from
        <if test='admGb == "1"'>
            tbpop_livi_mega_his a, tmp_date b
        </if>
        <if test='admGb == "2"'>
            tbpop_livi_cty_his a, tmp_date b
        </if>
        <if test='admGb == "3"'>
            tbpop_livi_admi_his a, tmp_date b
        </if>
        where 1=1
            and a.yyyymm = b.yyyymm
        <if test='admGb == "1"'>
            and mega_cd like #{areaCd}||'%'
        </if>
        <if test='admGb == "2"'>
            and cty_cd like #{areaCd}||'%'
        </if>
        <if test='admGb == "3"'>
            and admi_cd like #{areaCd}||'%'
        </if>
        group by
        1
        order by
        1
    </select>

    <!--  주거인구데이터 정보 호출  -->
    <select id="getHousList" resultType="com.zinidata.eatout.vo.output.AgileHousOutVO">
        with tmp_date as(
            select
                *
            from(
                select
                    to_char(yyyymm,'YYYYMM') as yyyymm
                    , substring(yyyymm::varchar,1,4) as year
                    , to_char(yyyymm,'MM')::numeric as month
                    , date_part('QUARTER',yyyymm::timestamp) as quarter
                    , concat(substring(yyyymm::varchar,1,4),date_part('QUARTER',yyyymm::timestamp)) as check_quarter
                    <![CDATA[
                        , case when date_part('QUARTER',yyyymm::timestamp) <= 2 then 1 else 2 end half
                        , case when date_part('QUARTER',yyyymm::timestamp) <= 2 then concat(substring(yyyymm::varchar,1,4),1) else concat(substring(yyyymm::varchar,1,4),2) end check_half
                    ]]>
                from
                    generate_series(to_date(((select min(yyyymm) from tbss_sum_sales_mega_his)),'YYYYMM'), to_date((select max(yyyymm) from tbss_sum_sales_mega_his),'YYYYMM'),'1 week') yyyymm
            ) tmp
            <if test='dateStart != null and dateEnd != null'>
                where
                <if test='dateType == "1"'>
                    year between #{dateStart} and #{dateEnd}
                </if>
                <if test='dateType == "2"'>
                    check_half between #{dateStart} and #{dateEnd}
                </if>
                <if test='dateType == "3"'>
                    check_quarter between #{dateStart} and #{dateEnd}
                </if>
                <if test='dateType == "4"'>
                    yyyymm between to_char(to_date(#{dateStart},'YYYYMM'),'YYYYMM') and to_char(to_date(#{dateEnd},'YYYYMM'),'YYYYMM')
                </if>
                <if test='dateType == "5"'>
                    check_quarter between #{dateStart} and #{dateEnd}
                </if>
            </if>
        )
        select
        <if test='dateType == "1"'>
            concat(year,'년') as yyyymm
        </if>
        <if test='dateType == "2"'>
            concat(year,'년',b.half,'분기') as yyyymm
        </if>
        <if test='dateType == "3"'>
            concat(year,'.',b.quarter,'Q') as yyyymm
        </if>
        <if test='dateType == "4"'>
            b.yyyymm
        </if>
        , sum(pop) as pop
        , sum(pop_m_20under) as m_20_under, sum(pop_m_20s) as m_20,sum(pop_m_30s) as m_30,sum(pop_m_40s) as m_40,sum(pop_m_50s) as m_50, sum(pop_m_60over) as m_60_over
        , sum(pop_w_20under) as w_20_under, sum(pop_w_20s) as w_20,sum(pop_w_30s) as w_30,sum(pop_w_40s) as w_40,sum(pop_w_50s) as w_50, sum(pop_w_60over) as w_60_over
        from
        <if test='admGb == "1"'>
            tbpop_hous_mega_his a, tmp_date b
        </if>
        <if test='admGb == "2"'>
            tbpop_hous_cty_his a, tmp_date b
        </if>
        <if test='admGb == "3"'>
            tbpop_hous_admi_his a, tmp_date b
        </if>
        where 1=1
        and a.yyyymm = b.yyyymm
        <if test='admGb == "1"'>
            and mega_cd like #{areaCd}||'%'
        </if>
        <if test='admGb == "2"'>
            and cty_cd like #{areaCd}||'%'
        </if>
        <if test='admGb == "3"'>
            and admi_cd like #{areaCd}||'%'
        </if>
        group by
        1
        order by
        1
    </select>

    <!--  생활인구데이터 정보 호출  -->
    <select id="getUpjongChgRate" resultType="com.zinidata.eatout.vo.output.AgileUpjongChgRateOutVO">
        select
            upjong3_nm,upjong3_cd, ROUND(((sale_amt_to - sale_amt_be)/sale_amt_to *100),2) as calc_per
             ,ROUND((sale_amt_to / 10000),0) as sale_amt
        from(
                select
                    a.yyyymm,a.upjong3_cd,a.upjong3_nm,a.sale_amt as sale_amt_be, b.sale_amt as sale_amt_to
                from(
                        select
                            yyyymm,b.upjong3_nm, a.upjong3_cd, sum(sale_amt) as sale_amt
                        from
                            tbss_sum_sales_mega_his a, tb_upjong3 b
                        where 1=1
                            and a.upjong3_cd = b.upjong3_cd
                            and yyyymm = to_char(to_date((select max(yyyymm) from tbss_sum_sales_mega_his),'YYYYMM') + interval '-1 month','YYYYMM')
                            and a.upjong3_cd like 'Q%'
                            and b.svc_yn = 'Y'
                        group by
                            yyyymm,b.upjong3_nm, a.upjong3_cd
                    ) a,(
                        select
                            yyyymm,b.upjong3_nm, a.upjong3_cd, sum(sale_amt) as sale_amt
                        from
                            tbss_sum_sales_mega_his a, tb_upjong3 b
                        where 1=1
                            and a.upjong3_cd = b.upjong3_cd
                            and yyyymm = (select max(yyyymm) from tbss_sum_sales_mega_his)
                            and a.upjong3_cd like 'Q%'
                            and b.svc_yn = 'Y'
                        group by
                            yyyymm,b.upjong3_nm, a.upjong3_cd
                    ) b
                where 1=1
                  and a.upjong3_cd = b.upjong3_cd
                  and a.upjong3_nm = b.upjong3_nm
            ) tmp
        order by sale_amt desc
    </select>
</mapper>